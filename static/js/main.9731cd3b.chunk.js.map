{"version":3,"sources":["api/todos.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","getAllTodo","a","fetch","response","json","currentUser","userId","TodoList","state","query","selectedStatus","selectedTodoId","handleTodoChange","event","setState","target","value","getAllTodos","props","todos","getActive","filter","todo","completed","getCompleted","getVisibleTodos","searchQuery","toLowerCase","filtered","title","includes","handleStatusChange","handleUserIdChange","this","filteredTodos","className","htmlFor","type","id","placeholder","onChange","name","map","classNames","onClick","React","Component","CurrentUser","user","email","phone","getLoadUserData","prevProps","clearUserDetails","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9731cd3b.chunk.js","sourcesContent":["const API_URL = 'https://mate.academy/students-api/todos';\n\nexport async function getAllTodo(): Promise<Todo[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nconst API_URL1 = 'https://mate.academy/students-api/users/';\n\nexport const currentUser = async (userId: number) => {\n  const response = await fetch(`${API_URL1}${userId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport 'bulma';\n\ntype Props = {\n  handleUserIdChange: (todo: Todo) => void;\n  todos: Todo[],\n};\n\ntype State = {\n  query: string;\n  selectedStatus: string,\n  selectedTodoId: number,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    query: '',\n    selectedStatus: '',\n    selectedTodoId: 0,\n  };\n\n  handleTodoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  getAllTodos = () => {\n    return this.props.todos;\n  };\n\n  getActive = () => {\n    return this.props.todos.filter(todo => todo.completed === false);\n  };\n\n  getCompleted = () => {\n    return this.props.todos.filter(todo => todo.completed === true);\n  };\n\n  getVisibleTodos = () => {\n    const { todos } = this.props;\n    const searchQuery = this.state.query.toLowerCase();\n\n    let filtered = todos.filter(todo => todo.title.toLowerCase().includes(searchQuery));\n\n    switch (this.state.selectedStatus) {\n      case 'active':\n        filtered = filtered.filter(todo => todo.completed === false);\n        break;\n      case 'completed':\n        filtered = filtered.filter(todo => todo.completed === true);\n        break;\n      default:\n        return filtered;\n    }\n\n    return filtered;\n  };\n\n  handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectedStatus: event.target.value,\n    });\n  };\n\n  render() {\n    const { handleUserIdChange } = this.props;\n    const { selectedTodoId } = this.state;\n    const filteredTodos = this.getVisibleTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2 className=\"title\">Todos:</h2>\n\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search Todo\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={this.handleTodoChange}\n              />\n            </label>\n          </div>\n\n          <div className=\"select is-small\">\n            <select\n              name=\"todosStatus\"\n              value={this.state.selectedStatus}\n              onChange={this.handleStatusChange}\n            >\n              <option value=\"allTodos\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                className={\n                  classNames(\n                    'TodoList__item',\n                    { 'TodoList__item--unchecked': selectedTodoId !== todo.id },\n                    { 'TodoList__item--checked': selectedTodoId === todo.id },\n                  )\n                }\n                key={todo.id}\n              >\n                <label htmlFor={`checkbox-${todo.id}`}>\n                  {/* <input type=\"checkbox\" readOnly /> */}\n                  <input\n                    type=\"checkbox\"\n                    id={`checkbox-${todo.id}`}\n                    onClick={() => {\n                      this.setState({\n                        selectedTodoId: todo.id,\n                      });\n                    }}\n                    // readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    button\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                  \"\n                  type=\"button\"\n                  key={todo.id}\n                  onClick={() => handleUserIdChange(todo)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { currentUser } from '../../api/todos';\n\ntype Props = {\n  clearUserDetails: () => void;\n  userId: number,\n};\n\ntype State = {\n  user: User,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state = {\n    user: {\n      id: 0,\n      name: '',\n      email: '',\n      phone: '',\n    },\n  };\n\n  async componentDidMount() {\n    this.getLoadUserData();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (this.props.userId !== prevProps.userId) {\n      this.getLoadUserData();\n    }\n  }\n\n  async getLoadUserData() {\n    const user = await currentUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${this.props.userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{this.state.user.name}</h3>\n        <p className=\"CurrentUser__email\">{this.state.user.email}</p>\n        <p className=\"CurrentUser__phone\">{this.state.user.phone}</p>\n\n        <button\n          className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n          type=\"button\"\n          onClick={this.props.clearUserDetails}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAllTodo } from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const todos = await getAllTodo();\n\n    this.setState({\n      todos: [...todos],\n    });\n  }\n\n  handleUserIdChange = (todo: Todo) => {\n    this.setState({\n      selectedUserId: todo.userId,\n    });\n  };\n\n  clearUserDetails = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            handleUserIdChange={this.handleUserIdChange}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearUserDetails={this.clearUserDetails} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}